[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool]
[tool.poetry]
name = "apns2"
version = "0.7.1"
description = "A python library for interacting with the Apple Push Notification Service via HTTP/2 protocol"
readme = 'README.md'
authors = [
    "Sergey Petrov <me@pr0ger.prg>",
    "Javier Cazallas <javier.cazallas@qustodio.com>"
]
license = "MIT"

classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries"
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
cryptography = ">=1.7.2"
httpx = { version = ">=0.28.1", extras = ["http2"] }
pyjwt = ">=2.0.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.2"
pytest-asyncio = "^1.2"
pytest-cov = "^6.0"
freezegun = "^1.5.1"


[tool.poetry.group.dev.dependencies]
mypy = "^1.18.2"
pre-commit = "^4.3.0"
coverage = "^7.11.0"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--tb=short",
    "-ra"
]
testpaths = ["test"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["apns2"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.13"
strict = true
mypy_path = "typings"
ignore_missing_imports = true
disallow_untyped_decorators = false
warn_unused_ignores = false

[tool.pylint.design]
max-args = 10
max-attributes = 10

[tool.pylint.format]
max-line-length = 120

[tool.pylint.'messages control']
disable = "missing-docstring, too-few-public-methods, locally-disabled, invalid-name"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39
isolated_build = True

[testenv]
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest {posargs}
"""
